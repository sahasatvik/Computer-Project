
\chapquote{``Objects are abstractions of processing. Threads are abstractions of schedule."}{James O. Coplien}

\problem Let a \textit{fraction} here be restricted to the ratio of two integers, $m$ and $n$, where $n \neq 0$. Thus, a fraction $\frac{m}{n}$ is
said to be reduced its \textit{lowest terms} when $m$ and $n$ are relatively prime.

Implement this model of \textit{fractions}, such that they are \textit{immutable} and reduced to their \textit{lowest terms} by default. Also
implement a simple method for adding two \textit{fractions}.

\solution
The problem of reducing a fraction $\frac{m}{n}$ to its lowest terms can be solved simply by dividing the numerator and the denominator by their
\textit{greatest common divisor}, i.e., $\mathrm{gcd}(m, n)$. This works as $\mathrm{gcd}(p, q) = 1$ if and only if $p$ and $q$ are relatively prime.
\\
Fraction addition can also be implemented using the following formula.
\begin{align*}
	\frac{a}{b} \,+\, \frac{c}{d} \;=\; \frac{ad + bc}{bd}
\end{align*}
The \textit{greatest common divisor} of two integers can be calculated recursively using \textit{Euclid's algorithm}.
\begin{align*}
	\mathrm{gcd}(a, b) \;=\; \mathrm{gcd}(b, a \bmod b)
\end{align*}

\clearpage
\algorithm
\texttt{main ()}
\begin{enumerate}
	\item Create 2 \texttt{Fraction} objects \texttt{a} and \texttt{b} using data supplied by the user.
	\item Call \texttt{Fraction->addFractions(a, b)}. Store the result in another \texttt{Fraction} object \texttt{sum}.
	\item Display \texttt{a}, \texttt{b} and \texttt{sum}. 
	\item \textbf{Exit} 
\end{enumerate}
\vspace{8mm}
\texttt{Fraction (numerator:Integer, denominator:Integer)}
\begin{enumerate}
	\item Set internal variables \texttt{numerator} and \texttt{denominator}, keeping them private.
	\item Reduce the fraction to its lowest form.
	\begin{enumerate}
		\item Calculate the \textit{greatest common divisor} of \texttt{numerator} and \texttt{denominator}, then divide
			each by the result.
		\item Shift any negative sign in \texttt{denominator} to \texttt{numerator}. 
	\end{enumerate}
	\item \textbf{Define} the function \texttt{Fraction::addFractions(fraction1, fraction2)}, and \textbf{return} the resultant object. 
\end{enumerate}
\vspace{5mm}
\texttt{Fraction::addFractions (fraction1:Fraction, fraction2:Fraction)}
\begin{enumerate}
	\item Calculate the \texttt{numerator} and \texttt{denominator} of the sum using the formula discussed above.
	\item Create a new \texttt{Fraction} object using the calculated \texttt{numerator} and \texttt{denominator}, then \textbf{return} it.
\end{enumerate}

\sourcecode
\lstinputlisting{src/Fraction.java}
\lstinputlisting{src/FractionAdder.java}

\varDescription
\begin{longtable} {| >{\ttfamily}p{0.15\linewidth} | >{\ttfamily}p{0.2\linewidth}| p{0.6\linewidth} |}
\hline\multicolumn{3}{|c|}{\tt Fraction}	\\ \hline
int 	&	numerator	&	Stores the numerator of the fraction \\ \hline
int 	& 	denominator	&	Stores the denominatpr of the fraction \\ \hline
\hline\multicolumn{3}{|c|}{\tt Fraction(int, int)}	\\ \hline
int 	&	g		&	Stores the greatest common divisor of \texttt{numerator} and \texttt{denominator} \\ \hline
\hline\multicolumn{3}{|c|}{\tt Fraction::addFractions(Fraction, Fraction)}	\\ \hline
Fraction	&	a, b	&	The two fractions to be added \\ \hline 
int 	&	sumNumerator	&	The numerator of the sum \\ \hline
int 	&	sumDenominator	&	The denominator of the sum \\ \hline
\hline\multicolumn{3}{|c|}{\tt FractionAdder::main(String[])}	\\ \hline
Scanner	&	inp		&	The input managing object \\ \hline
Fraction	&	a, b	&	The two fractions to be added \\ \hline 
Fraction	&	sum 	&	The sum of the fractions \texttt{a} and \texttt{b} \\ \hline 
\end{longtable}
